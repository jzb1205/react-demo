[{"E:\\react-moudle\\src\\index.js":"1","E:\\react-moudle\\src\\reportWebVitals.js":"2","E:\\react-moudle\\src\\App.js":"3","E:\\react-moudle\\src\\router\\index.js":"4","E:\\react-moudle\\src\\pages\\active\\component\\active1.js":"5","E:\\react-moudle\\src\\pages\\active\\component\\component\\active12.js":"6","E:\\react-moudle\\src\\pages\\active\\component\\component\\active11.js":"7","E:\\react-moudle\\src\\pages\\active\\component\\component\\active13.js":"8","E:\\react-moudle\\src\\pages\\dingyue\\component\\dingyue2.js":"9","E:\\react-moudle\\src\\pages\\active\\component\\component\\active22.js":"10","E:\\react-moudle\\src\\pages\\active\\component\\component\\active21.js":"11","E:\\react-moudle\\src\\pages\\active\\component\\component\\active23.js":"12","E:\\react-moudle\\src\\pages\\dingyue\\component\\dingyue1.js":"13","E:\\react-moudle\\src\\pages\\active\\component\\active3.js":"14","E:\\react-moudle\\src\\pages\\dingyue\\component\\dingyue3.js":"15","E:\\react-moudle\\src\\pages\\active\\component\\active2.js":"16","E:\\react-moudle\\src\\pages\\dingyue\\index.js":"17","E:\\react-moudle\\src\\pages\\active\\index.js":"18","E:\\react-moudle\\src\\containers\\Root.js":"19","E:\\react-moudle\\src\\containers\\AsyncApp.js":"20","E:\\react-moudle\\src\\components\\Picker.js":"21","E:\\react-moudle\\src\\components\\Posts.js":"22","E:\\react-moudle\\src\\store\\actions\\index.js":"23","E:\\react-moudle\\src\\store\\actionTypes\\index.js":"24","E:\\react-moudle\\src\\store\\configureStore.js":"25","E:\\react-moudle\\src\\store\\reducers\\index.js":"26"},{"size":948,"mtime":1610814088217,"results":"27","hashOfConfig":"28"},{"size":375,"mtime":1610730918580,"results":"29","hashOfConfig":"28"},{"size":516,"mtime":1610770842592,"results":"30","hashOfConfig":"28"},{"size":2951,"mtime":1610737649342,"results":"31","hashOfConfig":"28"},{"size":708,"mtime":1610730918518,"results":"32","hashOfConfig":"28"},{"size":82,"mtime":1610730918546,"results":"33","hashOfConfig":"28"},{"size":82,"mtime":1610730918544,"results":"34","hashOfConfig":"28"},{"size":82,"mtime":1610730918549,"results":"35","hashOfConfig":"28"},{"size":82,"mtime":1610730918574,"results":"36","hashOfConfig":"28"},{"size":82,"mtime":1610730918558,"results":"37","hashOfConfig":"28"},{"size":82,"mtime":1610730918556,"results":"38","hashOfConfig":"28"},{"size":82,"mtime":1610730918566,"results":"39","hashOfConfig":"28"},{"size":82,"mtime":1610730918573,"results":"40","hashOfConfig":"28"},{"size":79,"mtime":1610730918531,"results":"41","hashOfConfig":"28"},{"size":82,"mtime":1610730918576,"results":"42","hashOfConfig":"28"},{"size":707,"mtime":1610730918529,"results":"43","hashOfConfig":"28"},{"size":717,"mtime":1610730918577,"results":"44","hashOfConfig":"28"},{"size":2801,"mtime":1610771860592,"results":"45","hashOfConfig":"28"},{"size":378,"mtime":1610807766561,"results":"46","hashOfConfig":"28"},{"size":2959,"mtime":1610817373836,"results":"47","hashOfConfig":"28"},{"size":708,"mtime":1610804869404,"results":"48","hashOfConfig":"28"},{"size":364,"mtime":1610804886686,"results":"49","hashOfConfig":"28"},{"size":1485,"mtime":1610814435414,"results":"50","hashOfConfig":"28"},{"size":208,"mtime":1610802606066,"results":"51","hashOfConfig":"28"},{"size":415,"mtime":1610811344634,"results":"52","hashOfConfig":"28"},{"size":1457,"mtime":1610817115247,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1agpmxc",{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"92"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\react-moudle\\src\\index.js",[],"E:\\react-moudle\\src\\reportWebVitals.js",[],"E:\\react-moudle\\src\\App.js",[],"E:\\react-moudle\\src\\router\\index.js",["109"],"E:\\react-moudle\\src\\pages\\active\\component\\active1.js",[],"E:\\react-moudle\\src\\pages\\active\\component\\component\\active12.js",[],"E:\\react-moudle\\src\\pages\\active\\component\\component\\active11.js",[],"E:\\react-moudle\\src\\pages\\active\\component\\component\\active13.js",[],"E:\\react-moudle\\src\\pages\\dingyue\\component\\dingyue2.js",[],"E:\\react-moudle\\src\\pages\\active\\component\\component\\active22.js",[],"E:\\react-moudle\\src\\pages\\active\\component\\component\\active21.js",[],"E:\\react-moudle\\src\\pages\\active\\component\\component\\active23.js",[],"E:\\react-moudle\\src\\pages\\dingyue\\component\\dingyue1.js",[],"E:\\react-moudle\\src\\pages\\active\\component\\active3.js",[],"E:\\react-moudle\\src\\pages\\dingyue\\component\\dingyue3.js",[],"E:\\react-moudle\\src\\pages\\active\\component\\active2.js",[],"E:\\react-moudle\\src\\pages\\dingyue\\index.js",[],"E:\\react-moudle\\src\\pages\\active\\index.js",["110"],"E:\\react-moudle\\src\\containers\\Root.js",[],["111","112"],"E:\\react-moudle\\src\\containers\\AsyncApp.js",["113","114","115","116","117","118"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  selectSubreddit,\r\n  //   fetchPostsIfNeeded,\r\n  invalidateSubreddit,\r\n} from \"../store/actions\";\r\nimport Picker from \"../components/Picker\";\r\nimport Posts from \"../components/Posts\";\r\n\r\nclass AsyncApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"props\", props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    // this.handleRefreshClick = this.handleRefreshClick.bind(this);\r\n  }\r\n\r\n  //   componentDidMount() {\r\n  //     const { dispatch, selectedSubreddit } = this.props;\r\n  //     // dispatch(fetchPostsIfNeeded(selectedSubreddit));\r\n  //   }\r\n\r\n  //   componentWillReceiveProps(nextProps) {\r\n  //     if (nextProps.selectedSubreddit !== this.props.selectedSubreddit) {\r\n  //       const { dispatch, selectedSubreddit } = nextProps;\r\n  //       //   dispatch(fetchPostsIfNeeded(selectedSubreddit));\r\n  //     }\r\n  //   }\r\n\r\n  handleChange(nextSubreddit) {\r\n    this.props.dispatch(selectSubreddit(nextSubreddit));\r\n  }\r\n\r\n  //   handleRefreshClick(e) {\r\n  //     e.preventDefault();\r\n\r\n  //     const { dispatch, selectedSubreddit } = this.props;\r\n  //     dispatch(invalidateSubreddit(selectedSubreddit));\r\n  // dispatch(fetchPostsIfNeeded(selectedSubreddit));\r\n  //   }\r\n\r\n  render() {\r\n    const { selectedSubreddit, posts, isFetching, lastUpdated } = this.props;\r\n    return (\r\n      <div>\r\n        <Picker\r\n          value={selectedSubreddit}\r\n          onChange={this.handleChange}\r\n          options={[\"reactjs\", \"frontend\"]}\r\n        />\r\n        {/* <p>\r\n          {lastUpdated && (\r\n            <span>\r\n              Last updated at {new Date(lastUpdated).toLocaleTimeString()}.{\" \"}\r\n            </span>\r\n          )}\r\n          {!isFetching && (\r\n            <a href=\"#\" onClick={this.handleRefreshClick}>\r\n              Refresh\r\n            </a>\r\n          )}\r\n        </p>\r\n        {isFetching && posts.length === 0 && <h2>Loading...</h2>}\r\n        {!isFetching && posts.length === 0 && <h2>Empty.</h2>}\r\n        {posts.length > 0 && (\r\n          <div style={{ opacity: isFetching ? 0.5 : 1 }}>\r\n            <Posts posts={posts} />\r\n          </div>\r\n        )} */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAsyncApp.propTypes = {\r\n  selectedSubreddit: PropTypes.string.isRequired,\r\n  posts: PropTypes.array.isRequired,\r\n  isFetching: PropTypes.bool.isRequired,\r\n  lastUpdated: PropTypes.number,\r\n  dispatch: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction mapStateToProps(state) {\r\n  const { selectedSubreddit, postsBySubreddit } = state;\r\n  //   const { isFetching, lastUpdated, items: posts } = postsBySubreddit[\r\n  //     selectedSubreddit\r\n  //   ] || {\r\n  //     isFetching: true,\r\n  //     items: [],\r\n  //   };\r\n\r\n  return {\r\n    selectedSubreddit,\r\n    // posts,\r\n    // isFetching,\r\n    // lastUpdated,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(AsyncApp);\r\n","E:\\react-moudle\\src\\components\\Picker.js",[],"E:\\react-moudle\\src\\components\\Posts.js",[],"E:\\react-moudle\\src\\store\\actions\\index.js",["119","120","121"],"import fetch from \"cross-fetch\";\r\nimport {\r\n  REQUEST_POSTS,\r\n  RECEIVE_POSTS,\r\n  SELECT_SUBREDDIT,\r\n  INVALIDATE_SUBREDDIT,\r\n} from \"./../actionTypes\";\r\n\r\nexport function selectSubreddit(subreddit) {\r\n  return {\r\n    type: SELECT_SUBREDDIT,\r\n    subreddit,\r\n  };\r\n}\r\n\r\nexport function invalidateSubreddit(subreddit) {\r\n  return {\r\n    type: INVALIDATE_SUBREDDIT,\r\n    subreddit,\r\n  };\r\n}\r\n\r\n// function requestPosts(subreddit) {\r\n//   return {\r\n//     type: REQUEST_POSTS,\r\n//     subreddit,\r\n//   };\r\n// }\r\n\r\n// function receivePosts(subreddit, json) {\r\n//   return {\r\n//     type: RECEIVE_POSTS,\r\n//     subreddit,\r\n//     posts: json.data.children.map((child) => child.data),\r\n//     receivedAt: Date.now(),\r\n//   };\r\n// }\r\n\r\n// function fetchPosts(subreddit) {\r\n//   return (dispatch) => {\r\n// dispatch(requestPosts(subreddit));\r\n// return fetch(`https://www.reddit.com/r/${subreddit}.json`)\r\n//   .then((response) => response.json())\r\n//   .then((json) => dispatch(receivePosts(subreddit, json)));\r\n//   };\r\n// }\r\n\r\n// function shouldFetchPosts(state, subreddit) {\r\n// const posts = state.postsBySubreddit[subreddit];\r\n// if (!posts) {\r\n//   return true;\r\n// } else if (posts.isFetching) {\r\n//   return false;\r\n// } else {\r\n//   return posts.didInvalidate;\r\n// }\r\n// }\r\n\r\n// export function fetchPostsIfNeeded(subreddit) {\r\n//   return (dispatch, getState) => {\r\n// if (shouldFetchPosts(getState(), subreddit)) {\r\n// return dispatch(fetchPosts(subreddit));\r\n// }\r\n//   };\r\n// }\r\n","E:\\react-moudle\\src\\store\\actionTypes\\index.js",[],"E:\\react-moudle\\src\\store\\configureStore.js",[],"E:\\react-moudle\\src\\store\\reducers\\index.js",[],{"ruleId":"122","severity":1,"message":"123","line":22,"column":1,"nodeType":"124","endLine":108,"endColumn":3},{"ruleId":"125","severity":1,"message":"126","line":1,"column":10,"nodeType":"127","messageId":"128","endLine":1,"endColumn":17},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"125","severity":1,"message":"133","line":7,"column":3,"nodeType":"127","messageId":"128","endLine":7,"endColumn":22},{"ruleId":"125","severity":1,"message":"134","line":10,"column":8,"nodeType":"127","messageId":"128","endLine":10,"endColumn":13},{"ruleId":"125","severity":1,"message":"135","line":45,"column":32,"nodeType":"127","messageId":"128","endLine":45,"endColumn":37},{"ruleId":"125","severity":1,"message":"136","line":45,"column":39,"nodeType":"127","messageId":"128","endLine":45,"endColumn":49},{"ruleId":"125","severity":1,"message":"137","line":45,"column":51,"nodeType":"127","messageId":"128","endLine":45,"endColumn":62},{"ruleId":"125","severity":1,"message":"138","line":86,"column":30,"nodeType":"127","messageId":"128","endLine":86,"endColumn":46},{"ruleId":"125","severity":1,"message":"139","line":1,"column":8,"nodeType":"127","messageId":"128","endLine":1,"endColumn":13},{"ruleId":"125","severity":1,"message":"140","line":3,"column":3,"nodeType":"127","messageId":"128","endLine":3,"endColumn":16},{"ruleId":"125","severity":1,"message":"141","line":4,"column":3,"nodeType":"127","messageId":"128","endLine":4,"endColumn":16},"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","no-native-reassign",["142"],"no-negated-in-lhs",["143"],"'invalidateSubreddit' is defined but never used.","'Posts' is defined but never used.","'posts' is assigned a value but never used.","'isFetching' is assigned a value but never used.","'lastUpdated' is assigned a value but never used.","'postsBySubreddit' is assigned a value but never used.","'fetch' is defined but never used.","'REQUEST_POSTS' is defined but never used.","'RECEIVE_POSTS' is defined but never used.","no-global-assign","no-unsafe-negation"]